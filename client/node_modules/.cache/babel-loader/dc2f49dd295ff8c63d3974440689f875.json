{"ast":null,"code":"import _slicedToArray from \"/home/usuario/codeableorg/react-discord-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/usuario/codeableorg/react-discord-clone/client/src/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport Login from \"./Login/index\";\nimport { useLocalStorage } from \"./utils/hooks\"; // import \"./utils/fakeData\"; // load fake data, remove when pass to production\n\nfunction Index() {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const _useLocalStorage = useLocalStorage(\"currentUser\", null),\n        _useLocalStorage2 = _slicedToArray(_useLocalStorage, 2),\n        currentUser = _useLocalStorage2[0],\n        setCurrentUser = _useLocalStorage2[1];\n\n  const _useLocalStorage3 = useLocalStorage(\"channels\", []),\n        _useLocalStorage4 = _slicedToArray(_useLocalStorage3, 2),\n        setChannels = _useLocalStorage4[1];\n\n  const _useLocalStorage5 = useLocalStorage(\"users\", []),\n        _useLocalStorage6 = _slicedToArray(_useLocalStorage5, 2),\n        setUsers = _useLocalStorage6[1];\n\n  useEffect(() => {\n    if (username) {\n      const newId = Date.now();\n      setCurrentUser({\n        id: newId,\n        username: username,\n        creationDate: new Date().toLocaleString(),\n        state: \"active\"\n      });\n      setUsers([{\n        id: newId,\n        username: username,\n        isActive: true\n      }]);\n      setChannels([{\n        id: 1000000000000,\n        creationDate: null,\n        name: \"general\",\n        author: null,\n        joined: false,\n        visibility: true,\n        messages: []\n      }]);\n    }\n  }, [username]);\n\n  if (currentUser) {\n    return React.createElement(App, {\n      currentUser: currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Login, {\n    setUser: setUsername,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  });\n}\n\nconst $root = document.getElementById(\"root\");\nrender(React.createElement(Index, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), $root);","map":{"version":3,"sources":["/home/usuario/codeableorg/react-discord-clone/client/src/index.js"],"names":["React","useState","useEffect","render","App","Login","useLocalStorage","Index","username","setUsername","currentUser","setCurrentUser","setChannels","setUsers","newId","Date","now","id","creationDate","toLocaleString","state","isActive","name","author","joined","visibility","messages","$root","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC,C,CACA;;AAEA,SAASC,KAAT,GAAiB;AAAA,oBACiBN,QAAQ,CAAC,EAAD,CADzB;AAAA;AAAA,QACRO,QADQ;AAAA,QACEC,WADF;;AAAA,2BAEuBH,eAAe,CAAC,aAAD,EAAgB,IAAhB,CAFtC;AAAA;AAAA,QAERI,WAFQ;AAAA,QAEKC,cAFL;;AAAA,4BAGSL,eAAe,CAAC,UAAD,EAAa,EAAb,CAHxB;AAAA;AAAA,QAGNM,WAHM;;AAAA,4BAIMN,eAAe,CAAC,OAAD,EAAU,EAAV,CAJrB;AAAA;AAAA,QAINO,QAJM;;AAMfX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,QAAJ,EAAc;AACZ,YAAMM,KAAK,GAAGC,IAAI,CAACC,GAAL,EAAd;AACAL,MAAAA,cAAc,CAAC;AACbM,QAAAA,EAAE,EAAEH,KADS;AAEbN,QAAAA,QAAQ,EAAEA,QAFG;AAGbU,QAAAA,YAAY,EAAE,IAAIH,IAAJ,GAAWI,cAAX,EAHD;AAIbC,QAAAA,KAAK,EAAE;AAJM,OAAD,CAAd;AAOAP,MAAAA,QAAQ,CAAC,CACP;AACEI,QAAAA,EAAE,EAAEH,KADN;AAEEN,QAAAA,QAAQ,EAAEA,QAFZ;AAGEa,QAAAA,QAAQ,EAAE;AAHZ,OADO,CAAD,CAAR;AAQAT,MAAAA,WAAW,CAAC,CACV;AACEK,QAAAA,EAAE,EAAE,aADN;AAEEC,QAAAA,YAAY,EAAE,IAFhB;AAGEI,QAAAA,IAAI,EAAE,SAHR;AAIEC,QAAAA,MAAM,EAAE,IAJV;AAKEC,QAAAA,MAAM,EAAE,KALV;AAMEC,QAAAA,UAAU,EAAE,IANd;AAOEC,QAAAA,QAAQ,EAAE;AAPZ,OADU,CAAD,CAAX;AAWD;AACF,GA9BQ,EA8BN,CAAClB,QAAD,CA9BM,CAAT;;AAgCA,MAAIE,WAAJ,EAAiB;AACf,WAAO,oBAAC,GAAD;AAAK,MAAA,WAAW,EAAEA,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACD,SAAO,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAED,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD;;AAED,MAAMkB,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAd;AACA1B,MAAM,CAAC,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAYwB,KAAZ,CAAN","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport Login from \"./Login/index\";\nimport { useLocalStorage } from \"./utils/hooks\";\n// import \"./utils/fakeData\"; // load fake data, remove when pass to production\n\nfunction Index() {\n  const [username, setUsername] = useState(\"\");\n  const [currentUser, setCurrentUser] = useLocalStorage(\"currentUser\", null);\n  const [, setChannels] = useLocalStorage(\"channels\", []);\n  const [, setUsers] = useLocalStorage(\"users\", []);\n\n  useEffect(() => {\n    if (username) {\n      const newId = Date.now();\n      setCurrentUser({\n        id: newId,\n        username: username,\n        creationDate: new Date().toLocaleString(),\n        state: \"active\"\n      });\n\n      setUsers([\n        {\n          id: newId,\n          username: username,\n          isActive: true\n        }\n      ]);\n\n      setChannels([\n        {\n          id: 1000000000000,\n          creationDate: null,\n          name: \"general\",\n          author: null,\n          joined: false,\n          visibility: true,\n          messages: []\n        }\n      ]);\n    }\n  }, [username]);\n\n  if (currentUser) {\n    return <App currentUser={currentUser} />;\n  }\n  return <Login setUser={setUsername} />;\n}\n\nconst $root = document.getElementById(\"root\");\nrender(<Index />, $root);\n"]},"metadata":{},"sourceType":"module"}