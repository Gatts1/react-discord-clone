{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/usuario/codeableorg/react-discord-clone/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/usuario/codeableorg/react-discord-clone/client/src/ListMessages.js\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  border-top: 1px solid hsla(0, 0%, 100%, 0.06);\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  list-style: none;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  grid-area: list-message;\\n  background-color: #36393f;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { css } from \"emotion\";\nimport BlockDate from \"./BlockDate\";\nimport BlockNotification from \"./BlockNotification\";\nimport BlockMessage from \"./BlockMessage\";\nimport Scrollbar from \"./Scrollbar\";\nimport { compareDate, separatorDate } from \"./utils/date\";\nconst container = css(_templateObject());\nconst ul = css(_templateObject2());\nconst bTop = css(_templateObject3());\n\nfunction ListMessages({\n  messages,\n  currentUser,\n  data\n}) {\n  return React.createElement(\"section\", {\n    className: container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Scrollbar, {\n    height: \"calc(100vh - 66px - 48px - 5px)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: ul,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, messages.map((message, index) => {\n    if (index === 0) {\n      return React.createElement(React.Fragment, null, React.createElement(BlockDate, {\n        date: separatorDate(message.date),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), React.createElement(BlockNotification, {\n        key: message.id,\n        className: bTop,\n        currentUser: currentUser,\n        date: message.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(React.Fragment, null, compareDate(messages[index - 1].date, message.date) && React.createElement(BlockDate, {\n      date: separatorDate(message.date),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(BlockMessage, {\n      key: message.id,\n      className: bTop,\n      message: message,\n      currentUser: currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }))));\n}\n\nexport default ListMessages;","map":{"version":3,"sources":["/home/usuario/codeableorg/react-discord-clone/client/src/ListMessages.js"],"names":["React","css","BlockDate","BlockNotification","BlockMessage","Scrollbar","compareDate","separatorDate","container","ul","bTop","ListMessages","messages","currentUser","data","map","message","index","date","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,cAA3C;AAEA,MAAMC,SAAS,GAAGP,GAAH,mBAAf;AAKA,MAAMQ,EAAE,GAAGR,GAAH,oBAAR;AAIA,MAAMS,IAAI,GAAGT,GAAH,oBAAV;;AAIA,SAASU,YAAT,CAAsB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA;AAAzB,CAAtB,EAAuD;AACrD,SACE;AAAS,IAAA,SAAS,EAAEN,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,MAAM,EAAC,iCAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBGG,QAAQ,CAACG,GAAT,CAAa,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAChC,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACf,aACE,0CACE,oBAAC,SAAD;AAAW,QAAA,IAAI,EAAEV,aAAa,CAACS,OAAO,CAACE,IAAT,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,iBAAD;AACE,QAAA,GAAG,EAAEF,OAAO,CAACG,EADf;AAEE,QAAA,SAAS,EAAET,IAFb;AAGE,QAAA,WAAW,EAAEG,WAHf;AAIE,QAAA,IAAI,EAAEG,OAAO,CAACE,IAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAWD;;AACD,WACE,0CACGZ,WAAW,CAACM,QAAQ,CAACK,KAAK,GAAG,CAAT,CAAR,CAAoBC,IAArB,EAA2BF,OAAO,CAACE,IAAnC,CAAX,IACC,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAEX,aAAa,CAACS,OAAO,CAACE,IAAT,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAIE,oBAAC,YAAD;AACE,MAAA,GAAG,EAAEF,OAAO,CAACG,EADf;AAEE,MAAA,SAAS,EAAET,IAFb;AAGE,MAAA,OAAO,EAAEM,OAHX;AAIE,MAAA,WAAW,EAAEH,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAaD,GA3BA,CAhBH,CADF,CADF,CADF;AAmDD;;AAED,eAAeF,YAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"emotion\";\nimport BlockDate from \"./BlockDate\";\nimport BlockNotification from \"./BlockNotification\";\nimport BlockMessage from \"./BlockMessage\";\nimport Scrollbar from \"./Scrollbar\";\nimport { compareDate, separatorDate } from \"./utils/date\";\n\nconst container = css`\n  grid-area: list-message;\n  background-color: #36393f;\n`;\n\nconst ul = css`\n  list-style: none;\n`;\n\nconst bTop = css`\n  border-top: 1px solid hsla(0, 0%, 100%, 0.06);\n`;\n\nfunction ListMessages({ messages, currentUser, data }) {\n  return (\n    <section className={container}>\n      <Scrollbar height=\"calc(100vh - 66px - 48px - 5px)\">\n        <ul className={ul}>\n          {/* <BlockMessage className={bTop} />\n          <BlockDate />\n          <BlockNotification\n            key={message.id}\n            className={bTop}\n            currentUser={currentUser}\n          />\n          <BlockMessage className={bTop} />\n          <BlockDate />\n          <BlockNotification\n            key={message.id}\n            className={bTop}\n            currentUser={currentUser}\n          />\n          <BlockMessage className={bTop} /> */}\n          {messages.map((message, index) => {\n            if (index === 0) {\n              return (\n                <>\n                  <BlockDate date={separatorDate(message.date)} />\n                  <BlockNotification\n                    key={message.id}\n                    className={bTop}\n                    currentUser={currentUser}\n                    date={message.date}\n                  />\n                </>\n              );\n            }\n            return (\n              <>\n                {compareDate(messages[index - 1].date, message.date) && (\n                  <BlockDate date={separatorDate(message.date)} />\n                )}\n                <BlockMessage\n                  key={message.id}\n                  className={bTop}\n                  message={message}\n                  currentUser={currentUser}\n                />\n              </>\n            );\n          })}\n        </ul>\n      </Scrollbar>\n    </section>\n  );\n}\n\nexport default ListMessages;\n"]},"metadata":{},"sourceType":"module"}